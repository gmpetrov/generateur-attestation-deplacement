{"version":3,"sources":["App.tsx","serviceWorker.ts","index.tsx"],"names":["dayjs","locale","Fields","Purpose","schema","yup","shape","name","required","birthDay","birthTown","address","town","postalCode","purpose","PURPOSES","label","value","pro","grocery","health","family","sport","judicial","generalInterest","Option","Select","Title","Typography","generatePdf","a","signature","TEXT_SIZE","formattedBirthDay","format","fetch","then","res","arrayBuffer","bytes","PDFDocument","load","pdfDoc","page","getPages","drawText","x","y","size","hourDoc","String","Date","getHours","minDoc","getMinutes","dayDoc","getDate","monthDoc","getMonth","padStart","yearDoc","getFullYear","embedPng","signatureImg","signatureDim","scale","width","drawImage","height","save","pdfBytes","Blob","type","downloadBlob","blob","fileName","link","document","createElement","url","URL","createObjectURL","href","download","click","App","useState","undefined","signaturePad","setSignaturePad","useForm","validationSchema","handleSubmit","errors","control","onSubmit","values","toDataURL","useEffect","canvas","querySelector","SignaturePad","console","log","className","message","target","rel","Object","keys","length","as","placeholder","map","each","index","key","onClick","clear","htmlType","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.348f1add.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Input, Select, Button, Typography, DatePicker, Alert } from 'antd';\nimport { useForm, Controller } from 'react-hook-form';\nimport SignaturePad from 'signature_pad';\nimport { PDFDocument } from 'pdf-lib';\nimport * as yup from 'yup';\nimport dayjs from 'dayjs';\n\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport 'dayjs/locale/fr';\n\ndayjs.locale('fr');\n\nconst DATE_FORMAT = 'DD/MM/YYYY';\n\nenum Fields {\n  name = 'name',\n  birthDay = 'birthDay',\n  birthTown = 'birthTown',\n  address = 'address',\n  town = 'town',\n  postalCode = 'postalCode',\n  purpose = 'purpose',\n  signature = 'signature'\n}\n\nconst schema = yup.object().shape({\n  [Fields.name]: yup.string().required(),\n  [Fields.birthDay]: yup.string().required(),\n  [Fields.birthTown]: yup.string().required(),\n  [Fields.address]: yup.string().required(),\n  [Fields.town]: yup.string().required(),\n  [Fields.postalCode]: yup.string().required(),\n  [Fields.purpose]: yup.string().required()\n});\n\ntype FormValues = yup.InferType<typeof schema>;\n\ninterface GenPDFprops extends FormValues {\n  [Fields.signature]: string;\n}\n\nenum Purpose {\n  pro = 'pro',\n  grocery = 'grocery',\n  health = 'health',\n  family = 'family',\n  sport = 'sport',\n  judicial = 'judicial',\n  generalInterest = 'generalInterest'\n}\n\nconst PURPOSES = [\n  {\n    label: 'Pro',\n    value: Purpose.pro\n  },\n  {\n    label: 'Achats de première nécessité',\n    value: Purpose.grocery\n  },\n  { label: 'Santé', value: Purpose.health },\n  {\n    label: 'Famille',\n    value: Purpose.family\n  },\n  {\n    label: 'Déplacements brefs (max 1km) sport individuel',\n    value: Purpose.sport\n  },\n  {\n    label: 'Convocation judiciaire ou administrative',\n    value: Purpose.judicial\n  },\n  {\n    label: \"Mission d'interêt général\",\n    value: Purpose.generalInterest\n  }\n];\n\nconst { Option } = Select;\nconst { Title } = Typography;\n\nfunction App() {\n  const [signaturePad, setSignaturePad] = useState<SignaturePad | undefined>(\n    undefined\n  );\n  const { handleSubmit, errors, control } = useForm<FormValues>({\n    validationSchema: schema\n  });\n\n  const onSubmit = async (values: FormValues) => {\n    const fileName = 'attestation.pdf';\n    const signature: string = signaturePad?.toDataURL() || '';\n\n    const blob = await generatePdf({\n      ...values,\n      signature\n    });\n\n    downloadBlob(blob, fileName);\n  };\n\n  const handleClearPad = () => {\n    signaturePad?.clear();\n  };\n\n  useEffect(() => {\n    const canvas: HTMLCanvasElement | null = document.querySelector('canvas');\n\n    if (canvas) {\n      setSignaturePad(new SignaturePad(canvas));\n    } else {\n      console.log('no canvas');\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Title className=\"title\">Générateur d'attestation de déplacement</Title>\n\n      <Alert\n        className=\"alert\"\n        type=\"warning\"\n        message={\n          <>\n            <p>\n              <a\n                className=\"uppercase\"\n                href=\"https://www.liberation.fr/checknews/2020/03/18/confinement-peut-on-montrer-l-attestation-de-deplacement-sur-son-telephone_1782180\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                L'attestation dématérialisée n'est plus autorisée, seule la\n                version papier est acceptée (imprimée ou mansucrite).\n              </a>\n            </p>\n            {/* \n            <p>\n              Afin de ne pas vous induire en erreur je désactive le générateur.\n            </p> */}\n\n            <br />\n\n            <p>\n              Vous pouvez trouver l'attestation officielle{' '}\n              <a\n                href=\"https://www.interieur.gouv.fr/Actualites/L-actu-du-Ministere/Attestation-de-deplacement-derogatoire-et-justificatif-de-deplacement-professionnel\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                ici.\n              </a>\n            </p>\n          </>\n        }\n        // description={}\n      ></Alert>\n\n      <Alert\n        className=\"alert\"\n        type=\"info\"\n        message={\n          <>\n            <p>\n              Petition pour pouvoir utliser une attestation dématerialisée{' '}\n              <a\n                href=\"https://www.change.org/p/emmanuel-macron-pour-d%C3%A9mat%C3%A9rialiser-les-attestations-de-d%C3%A9placement-72e66b58-254e-42ad-9d50-41896a921102\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                ici\n              </a>\n            </p>\n          </>\n        }\n        // description={}\n      ></Alert>\n\n      {/* <Alert\n        className=\"alert\"\n        type=\"info\"\n        message={\n          <>\n            <p>\n              Pas besoin d'imprimer l'attestation de deplacement dérogatoire,{' '}\n              <a\n                href=\"https://www.numerama.com/politique/611777-attestation-de-deplacement-que-faire-sans-imprimante-ni-papier.html\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                une version numerique suffit.\n              </a>\n            </p>\n            <a\n              href=\"https://www.interieur.gouv.fr/Actualites/L-actu-du-Ministere/Attestation-de-deplacement-derogatoire-et-justificatif-de-deplacement-professionnel\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Plus d'informations sur le site officiel du gouvernement.\n            </a>\n          </>\n        }\n        // description={}\n      ></Alert> */}\n\n      <form className=\"Form\" onSubmit={handleSubmit(onSubmit)}>\n        {Object.keys(errors).length > 0 && (\n          <span className=\"form-error-label\">\n            Tous les champs sont obligatoires !\n          </span>\n        )}\n\n        <Controller\n          as={<Input placeholder=\"Nom\" />}\n          control={control}\n          name={Fields.name}\n        />\n\n        <Controller\n          as={\n            <DatePicker\n              placeholder=\"Date de naissance\"\n              name={Fields.birthDay}\n              format={DATE_FORMAT}\n            />\n          }\n          control={control}\n          name={Fields.birthDay}\n        />\n        <Controller\n          as={<Input placeholder=\"Lieu de naissance\" />}\n          control={control}\n          name={Fields.birthTown}\n        />\n        <Controller\n          as={\n            <Input placeholder=\"Adresse\" />\n\n            // <PlacesAutocomplete value={addr} onChange={handleChangeAddr}>\n            //   {({\n            //     getInputProps,\n            //     suggestions,\n            //     getSuggestionItemProps,\n            //     loading\n            //   }) => (\n            //     <AutoComplete\n            //       onSelect={(value: any) => {\n            //         setValue('address', value);\n            //       }}\n            //       options={suggestions.map(each => ({\n            //         value: each.description\n            //       }))}\n            //     >\n            //       <Input\n            //         {...getInputProps({\n            //           placeholder: 'Adresse'\n            //         })}\n            //       />\n            //     </AutoComplete>\n            //   )}\n            // </PlacesAutocomplete>\n          }\n          control={control}\n          name={Fields.address}\n        />\n\n        <Controller\n          as={<Input placeholder=\"Ville\" value=\"Lyon\" />}\n          control={control}\n          name={Fields.town}\n        />\n\n        <Controller\n          as={<Input placeholder=\"Code Postal\" />}\n          control={control}\n          name={Fields.postalCode}\n        />\n\n        <Controller\n          as={\n            <Select placeholder=\"Motif\">\n              {PURPOSES.map((each, index) => (\n                <Option key={index} value={each.value}>\n                  {each.label}\n                </Option>\n              ))}\n            </Select>\n          }\n          control={control}\n          name=\"purpose\"\n        ></Controller>\n\n        <span className=\"label\">Signature:</span>\n\n        <canvas></canvas>\n\n        <a className=\"link clear-pad\" onClick={handleClearPad}>\n          Effacer signature\n        </a>\n\n        <Button type=\"primary\" htmlType=\"submit\">\n          Générer PDF\n        </Button>\n      </form>\n\n      <span className=\"footerText\">\n        Bon courage pendant le confinement, et sortez couvert 😷{' '}\n      </span>\n\n      <span className=\"footerText warning\">\n        Les données personnelles ne sont pas collectées (c'est à dire qu'aucune\n        des informations ci-dessus n'est envoyée à aucun moment vers un serveur,\n        tout reste uniquement sur votre téléphone)\n      </span>\n\n      <a\n        className=\"link\"\n        href=\"https://github.com/gmpetrov/generateur-attestation-deplacement\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        code source\n      </a>\n\n      <a className=\"link\" href=\"mailto:georges@cool.ovh\">\n        contact\n      </a>\n    </div>\n  );\n}\n\nconst generatePdf = async ({\n  name,\n  birthDay,\n  birthTown,\n  address,\n  town,\n  postalCode,\n  purpose,\n  signature\n}: GenPDFprops) => {\n  const TEXT_SIZE = 10;\n  const formattedBirthDay = dayjs(birthDay).format(DATE_FORMAT);\n\n  const bytes = await fetch('template.pdf').then(res => res.arrayBuffer());\n  const pdfDoc = await PDFDocument.load(bytes);\n\n  const page = pdfDoc.getPages()[0];\n\n  page.drawText(name, { x: 122, y: 685, size: TEXT_SIZE });\n  page.drawText(formattedBirthDay, { x: 122, y: 661, size: TEXT_SIZE });\n  page.drawText(birthTown, { x: 90, y: 637, size: TEXT_SIZE });\n  page.drawText(`${address} ${postalCode} ${town}`, {\n    x: 134,\n    y: 613,\n    size: TEXT_SIZE\n  });\n\n  switch (purpose) {\n    case Purpose.pro:\n      page.drawText('x', { x: 77, y: 528, size: 17 });\n      break;\n    case Purpose.grocery:\n      page.drawText('x', { x: 77, y: 478, size: 17 });\n      break;\n    case Purpose.health:\n      page.drawText('x', { x: 77, y: 437, size: 17 });\n      break;\n    case Purpose.family:\n      page.drawText('x', { x: 77, y: 401, size: 17 });\n      break;\n    case Purpose.sport:\n      page.drawText('x', { x: 77, y: 345, size: 17 });\n      break;\n    case Purpose.judicial:\n      page.drawText('x', { x: 77, y: 298, size: 17 });\n      break;\n    case Purpose.generalInterest:\n      page.drawText('x', { x: 77, y: 262, size: 17 });\n      break;\n  }\n\n  page.drawText(town, { x: 109, y: 225, size: TEXT_SIZE });\n\n  const hourDoc = String(new Date().getHours());\n  const minDoc = String(new Date().getMinutes());\n  const dayDoc = new Date().getDate();\n  const monthDoc = String(new Date().getMonth() + 1).padStart(2, '0');\n  const yearDoc = new Date().getFullYear();\n\n  page.drawText(`${dayDoc} / ${monthDoc} / ${yearDoc}`, {\n    x: 93,\n    y: 202,\n    size: TEXT_SIZE\n  });\n\n  page.drawText(hourDoc, { x: 195, y: 202, size: TEXT_SIZE });\n  page.drawText(minDoc, { x: 224, y: 202, size: TEXT_SIZE });\n\n  const signatureImg = await pdfDoc.embedPng(signature);\n  const signatureDim = signatureImg.scale(1 / (signatureImg.width / 100));\n\n  page.drawImage(signatureImg, {\n    x: 134, //page.getWidth() - signatureDim.width - 50,\n    y: 131,\n    width: signatureDim.width,\n    height: signatureDim.height\n  });\n\n  const pdfBytes = await pdfDoc.save();\n\n  return new Blob([pdfBytes], { type: 'application/pdf' });\n};\n\nconst downloadBlob = (blob: Blob, fileName: string) => {\n  const link = document.createElement('a');\n  const url = URL.createObjectURL(blob);\n\n  link.href = url;\n  link.download = fileName;\n  link.click();\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}